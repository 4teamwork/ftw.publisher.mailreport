Event-Handler test
==================

    >>> from ftw.publisher.mailreport.interfaces import INotifierConfigurationSchema
    >>> from ftw.publisher.mailreport.adapters import MailReportNotifier

We have a event-handler on the publisher `IQueueExecutedEvent`.

Be a manager:
    >>> self.setRoles(('Manager',))

Lets do some configuration:
    >>> config = INotifierConfigurationSchema(self.portal)
    >>> config.enabled = False

The event handler should call the adapter, so we need to patch the adapter
for checking if it works:
    >>> ori_notifier_call = MailReportNotifier.__call__
    >>> def patched_call(self):
    ...     print 'notifier called'
    >>> MailReportNotifier.__call__ = patched_call

The notification is disabled, so it should not do anything:
    >>> self.portal.restrictedTraverse('@@publisher.executeQueue')()
    ''

If the notification is enabled the notifier should be called:
    >>> config.enabled = True
    >>> self.portal.restrictedTraverse('@@publisher.executeQueue')()
    notifier called
    ''

Remove the patch:
    >>> MailReportNotifier.__call__ = ori_notifier_call
